---
- name: upgrade packages
  ansible.builtin.package:
    name: "*"
    state: latest

- name: install pre-requirements
  ansible.builtin.package:
    name:
      - unzip
      - rng-tools
      - python3
      - python3-pip
      - xfsprogs
    state: present

- name: Copy rngd systemd template
  template:
    src: rngd.service.j2
    dest: /etc/systemd/system/rngd.service
    owner: root
    group: root
    mode: 0644

- name: Ensure that the rngd service is enabled and started at boot time
  service:
    name: rngd
    enabled: yes
    state: started

- name: set hostnames
  ansible.builtin.shell:
    cmd: |
      hostnamectl set-hostname "{{ inventory_hostname_short }}.{{ domain_name }}"

- name: Update the /etc/hosts file with node name
  tags: etchostsupdate
  lineinfile:
    path: "/etc/hosts"
    regexp: ".*\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
    line: "{{ hostvars[item]['ansible_default_ipv4']['address'] }}\t{{ hostvars[item]['ansible_hostname']}}"
    state: present
  register: etchostsupdate
  with_items: "{{groups['all']}}"

- name: disable swap
  shell: |
         sudo swapoff -a
         sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

# No firewall in raspbian
#- name: be sure ufw is disabled and stopped
#  systemd:
#    name: ufw
#    enabled: no
#    state: stopped

- name: install chrony
  ansible.builtin.package:
    state: present
    name: chrony

- name: start and enable chrony
  ansible.builtin.systemd:
    state: started
    name: chrony
    enabled: yes

- name: copy over chrony ntp server template
  ansible.builtin.template:
    dest: /etc/chrony/sources.d/local.sources
    src: local.sources.j2
  notify: Reload chrony sources

- name: import emulation playbook
  import_tasks: emulation.yml
  when: arch_emulation | bool



